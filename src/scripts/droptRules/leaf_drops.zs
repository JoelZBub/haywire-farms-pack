/*
		Script for Dropt mod for control of block drops in a much cleaner
		and configurable fashion
*/

import mods.dropt.Dropt;

Dropt.list("leaf_drops")

  .add(Dropt.rule()
      .matchBlocks(["biomesoplenty:leaves_0:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["biomesoplenty:leaves_1:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
    .add(Dropt.rule()
      .matchBlocks(["biomesoplenty:leaves_2:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["biomesoplenty:leaves_3:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )  
  .add(Dropt.rule()
      .matchBlocks(["biomesoplenty:leaves_4:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["biomesoplenty:leaves_5:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:leaves:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["minecraft:leaves2:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
  .add(Dropt.rule()
    .matchBlocks(["rustic:leaves:*"])
    .replaceStrategy("ADD")
    .matchHarvester(Dropt.harvester()
        .type("PLAYER")
        .mainHand("EMPTY")
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(50)) 
        .items([<minecraft:stick>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(50)) // drops nothing if selected
    )
  )
  .add(Dropt.rule()
      .matchBlocks(["rustic:leaves_apple:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
   .add(Dropt.rule()
      .matchBlocks(["floricraft:leaves_floric_type0:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["forestry:leaves.decorative.0:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["forestry:leaves.decorative.1:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  )
  .add(Dropt.rule()
      .matchBlocks(["forestry:leaves.decorative.2:*"])
      .replaceStrategy("ADD")
      .matchHarvester(Dropt.harvester()
          .type("PLAYER")
          .mainHand("EMPTY")
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) 
          .items([<minecraft:stick>])
      )
      .addDrop(Dropt.drop()
          .selector(Dropt.weight(50)) // drops nothing if selected
      )
  );



  